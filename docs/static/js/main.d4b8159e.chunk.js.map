{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchHook.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGif","el","key","GifExpertApp","categorias","setCategorias","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAc5C,OACQ,0BAAMC,SATO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAST,EACTU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,uDAEjBC,UAAUH,GAFO,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAACC,GAAD,MACjB,CACGC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAMQ,EAAIG,OAAOC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBT,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAElC,OACI,yBAAKI,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAY,IAAD,EACTd,mBAAS,CAC/BqB,KAAO,GACPa,SAAU,IAHqB,mBAC5BC,EAD4B,KACrBC,EADqB,KAenC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACfH,EAAS,CACLf,KAAOkB,EACPL,SAAU,SAGxB,CAACpB,IAEIqB,EDZwBK,CAAY1B,GAA/Ba,EADuB,EAC5BN,KAAaa,EADe,EACfA,QAEpB,OACI,oCACJ,wBAAIJ,UAAU,qCAAqChB,GAC9CoB,GAAW,sCACZ,yBAAKJ,UAAU,aAGPH,EAAOJ,KAAI,SAACkB,GAAD,OACP,kBAAC,EAAD,eAAaC,IAAKD,EAAGhB,IAAQgB,UEUlCE,EAtBM,WAAM,IAAD,EAEc3C,mBAAS,CAAC,WAFxB,mBAEf4C,EAFe,KAEHC,EAFG,KAItB,OAAO,oCACC,0CACA,kBAAC,EAAD,CACA9C,cAAgB8C,IAEhB,6BACA,4BACCD,EAAWrB,KAAI,SAAAT,GAAQ,OAChB,kBAAC,EAAD,CACAA,SAAUA,EACV4B,IAAK5B,U,MCZzBgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d4b8159e.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories((cats) => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n            </form>\r\n    )\r\n}\r\nCategoryAdd.propTypes = {\r\n    setCategories : PropTypes.func.isRequired,\r\n}","export const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=\r\n    ${encodeURI(category)}&limit=10&api_key=7HjX7euNtEFmJ2NNdNklOUrtwp96Z6wb`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map((img) => \r\n        ({\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images.downsized_medium.url,\r\n        })\r\n    )\r\n    \r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, url, title}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>  \r\n            <p>{title}</p>     \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchHook';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGif(category);\r\n\r\n    return (\r\n        <>\r\n    <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                images.map((el)=>\r\n                    <GifGridItem key={el.id} {...el}/>\r\n                    )\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\nexport const useFetchGif = (category)=>{\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading : true,\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs => {\r\n                setstate({\r\n                    data : imgs,\r\n                    loading : false,\r\n                })\r\n            });\r\n    },[category])\r\n\r\n    return state;\r\n\r\n} ;","import React, { useState } from 'react';\r\nimport { CategoryAdd } from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categorias, setCategorias] = useState(['Series']);\r\n\r\n    return <>\r\n            <h2>Hola mundo</h2>\r\n            <CategoryAdd \r\n            setCategories={ setCategorias } \r\n            />\r\n            <hr/>\r\n            <ol>\r\n            {categorias.map(category => \r\n                    <GifGrid \r\n                    category={category}\r\n                    key={category}\r\n                    />\r\n                    )\r\n            }\r\n            </ol>\r\n        </>;\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\nimport animate from 'animate.css'\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}